CREATE OR REPLACE FUNCTION ignitionzk.get_proposals_with_details(p_group_ids uuid[])
RETURNS TABLE (
    proposal_id uuid,
    epoch_id uuid,
    group_id uuid,
    group_member_id uuid,
    status_id uuid,
    status_type text,
    title text,
    description text,
    metadata jsonb,
    payload jsonb,
    created_at timestamptz,
    claim_hash text,
    funding jsonb,
    vote_tally jsonb,
    group_name text,
    epoch_duration int4,
    epoch_name text,
    epoch_start_time timestamptz,
    is_approved boolean,
    circuit_id uuid 
)
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN QUERY
    SELECT
        p.proposal_id,
        p.epoch_id,
        p.group_id,
        p.group_member_id,
        p.status_id,
        ps.status_type,
        p.title,
        p.description,
        p.metadata,
        p.payload,
        p.created_at,
        p.claim_hash,
        p.funding,
        p.vote_tally,
        g.name AS group_name,
        e.epoch_duration,
        e.epoch_name,
        e.epoch_start_time,
        e.is_approved,
        pr.circuit_id 
    FROM
        ignitionzk.proposals AS p
    JOIN
        ignitionzk.proposal_status AS ps ON p.status_id = ps.status_id
    JOIN
        ignitionzk.groups AS g ON p.group_id = g.group_id
    LEFT JOIN
        ignitionzk.epochs AS e ON p.epoch_id = e.epoch_id
    LEFT JOIN 
        ignitionzk.proofs AS pr ON p.proposal_id = pr.proposal_id
    WHERE
        p.group_id = ANY(p_group_ids);
END;
$$;